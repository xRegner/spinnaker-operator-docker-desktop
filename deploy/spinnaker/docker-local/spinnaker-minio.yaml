### this yaml istall spinnaker OOS in a minimal configuration
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: spinnaker-operator
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: minio
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: minio
  name: minio-pvc
  namespace: spinnaker-operator
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: spinnaker-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - mkdir -p /storage/spinnaker && /usr/bin/minio server /storage
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: minioAccessKey
              name: spin-secrets
        image: minio/minio
        name: minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /storage
          name: storage
      securityContext:
        fsGroup: 65535
        runAsGroup: 65535
        runAsUser: 1000
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: spinnaker.io/v1alpha2
kind: SpinnakerService
metadata:
  name: spinnaker
  namespace: spinnaker-operator
spec:
  expose:
    type: service  # Kubernetes LoadBalancer type (service/ingress), note: only "service" is supported for now
    service:
      type: LoadBalancer
<<<<<<< HEAD:deploy/spinnaker/docker-local/installation.yaml
  kustomize:
    clouddriver: {}
    deck: {}
    echo: {}
    front50: {}
    gate: {}
    igor: {}
    orca: {}
    rosco: {}
=======
>>>>>>> c88860971c95f2b0a2e883c486ea42e54a7030a2:deploy/spinnaker/docker-local/spinnaker-minio.yaml
  spinnakerConfig:
    config:
      artifacts: {}
      canary: {}
      ci: {}
      deploymentEnvironment: {}
      features: {}
      metricStores: {}
      notifications: {}
      persistentStorage:
        persistentStoreType: s3
        s3:
<<<<<<< HEAD:deploy/spinnaker/docker-local/installation.yaml
          bucket: spinnaker                     # The name of an S3 bucket that Spinnaker will use to save information like applications and pipelines.
          rootFolder: front50                   # The root folder in the chosen bucket to place all of Spinnaker's persistent data in.
          #region: us-west-2                     # (Optional).
          accessKeyId: minio                    # (Optional). Your AWS Access Key ID. If not provided, Operator/Spinnaker will try to find AWS credentials as described at http://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html#credentials-default
          secretAccessKey: encrypted:k8s!n:spin-secrets!k:minioAccessKey # (Secret, Optional). Your AWS Secret Key.
          pathStyleAccess: true                 # (Optional). When true, use path-style to access bucket; when false, use virtual hosted-style to access bucket.
          endpoint: http://minio:9000 
=======
          accessKeyId: minio
          bucket: spinnaker
          endpoint: http://minio:9000
          pathStyleAccess: true
          region: us-west-2
          rootFolder: front50
          secretAccessKey: encrypted:k8s!n:spin-secrets!k:minioAccessKey 
>>>>>>> c88860971c95f2b0a2e883c486ea42e54a7030a2:deploy/spinnaker/docker-local/spinnaker-minio.yaml
      providers: {}
      pubsub: {}
      repository: {}
      security: {}
      spinnaker: {}
<<<<<<< HEAD:deploy/spinnaker/docker-local/installation.yaml
      version: 1.26.6
=======
      version: 1.17.1
>>>>>>> c88860971c95f2b0a2e883c486ea42e54a7030a2:deploy/spinnaker/docker-local/spinnaker-minio.yaml
    profiles:
      clouddriver: {}
      echo: {}
      front50: {}
      gate: {}
      igor: {}
      orca: {}
      rosco: {}
      settings-local.js: {}
      spinnaker: {}
      spinnakerconfig: {}
    service-settings:
      clouddriver: {}
      echo: {}
      front50: {}
      gate: {}
      igor: {}
      orca: {}
      rosco: {}
      spinnaker: {}
  validation: {}
